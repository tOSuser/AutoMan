#: Python environment setup functions
#:
#: File : python.env
#
#
# Copyright (c) 2023 Nexttop (nexttop.se)
#---------------------------------------

#*
#*  @description    Check and install python required modules
#*
#*  @param			none
#*
#*  @return			0 if both python 2 & 3 available, > 0 if atleast one is not available
#*
function checkPython() #@ USAGE checkPython
{
	checkOutput=$(which python)
	pythonCheckResult=$?
	[[ $pythonCheckResult -ne 0 ]] && echo "Python was not found. Please install python2 first by using 'sudo apt install python'."

	checkOutput=$(which python3)
	python3CheckResult=$?
	[[ $python3CheckResult -ne 0 ]] && echo "Python3 was not found. Please install python3 first by using 'sudo apt install python'."

	return $(($pythonCheckResult+$python3CheckResult))
}

#*
#*  @description	Check pip for Python is available
#*
#*  @param			none
#*
#*  @return			0 if success, none 0 if failed
#*
function checkPythonPip() #@ USAGE checkPythonPip
{
	checkOutput=$(python -m pip --version  &)
	return $?
}

#*
#*  @description	Install pip for Python
#*
#*  @param			none
#*
#*  @return			0 if success, none 0 if failed
#*
function installPythonPip() #@ USAGE installPythonPip2
{
	# setup pip for python version 2.7
	curl https://bootstrap.pypa.io/pip/2.7/get-pip.py -o get-pip.py
	python get-pip.py
	return $?
}

#*
#*  @description	Check pip for Python3 is available
#*
#*  @param			none
#*
#*  @return			0 if success, none 0 if failed
#*
function checkPython3Pip() #@ USAGE checkPython3Pip
{
	checkOutput=$(python3 -m pip --version  &)
	python3pipCheckResult=$?
	[[ $python3pipCheckResult -ne 0 ]] && echo "Python3 pip was not found. Please install python2 first by using 'sudo apt install python3-pip'."

	return $python3pipCheckResult
}

#*
#*  @description	Check a python moudle and try to install it if it's not available
#*
#*  @param			none
#*
#*  @return			0 if success, none 0 if failed
#*
function checkPythonModule() #@ USAGE checkPythonModule pythoncmd modulename
{
	pythoncmd=$1
	modulename=$2
	echo "Check : $pythoncmd - $modulename"
	checkOutput=$($pythoncmd -m pip show $modulename &>/dev/null )
	[ $? -ne 0 ] && $pythoncmd -m pip install $modulename && return $?
	return 0
}

## The main
## --------------------------------------
module_1=( 'python' 'mysql.connector' )
module_2=( 'python' 'requests' )
module_3=( 'python' 'configparser' )
module_4=( 'python3' 'pymysql' )
module_5=( 'python3' 'requests' )
module_6=( 'python3' 'configparser' )
### modules' list
arrModuleList=( module_1 module_2 module_3 module_4 module_5 module_6 )

checkPython
[ $? -ne 0 ] && return 1
checkPython3Pip
[ $? -ne 0 ] && return 1
#checkPythonPip
#[ $? -ne 0 ] && installPythonPip2
#[ $? -ne 0 ] && return 1

for iModule in "${arrModuleList[@]}"
do
    eval pythoncmd='"${'$iModule'[0]}"'
    eval modulename='"${'$iModule'[1]}"'
	checkPythonModule $pythoncmd $modulename
	[ $? -ne 0 ] &&
		return 1
done
return 0